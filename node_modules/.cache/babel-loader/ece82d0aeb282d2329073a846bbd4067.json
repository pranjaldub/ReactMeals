{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\ReactMeals\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\n//component for providing\n//we will use useReducer for managing state\nimport { useReducer } from \"react\"; //Headerbutton.js needs access to this context for count badge\n//meals.js will need acess to the context to add item to the cart\n\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState); //fucntion to add items\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  }; //function to remove item from cart\n\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REM',\n      id: id\n    });\n  }; //global context data\n\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeitem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"irLoCnUjZMazMtjqft6WkB530Qg=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["F:/React/ReactMeals/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","item","type","removeItemFromCartHandler","id","cartContext","addItem","removeitem","children"],"mappings":";;;AAAA;AACA;AACA,SAASA,UAAT,QAA2B,OAA3B,C,CAGA;AACA;;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAE;AACpBC,EAAAA,KAAK,EAAC,EADc;AAEpBC,EAAAA,WAAW,EAAC;AAFQ,CAAxB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAClC,SAAOL,gBAAP;AACH,CAFD;;AAIA,MAAMM,YAAY,GAAIC,KAAD,IAAU;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAaC,kBAAb,IAAmCX,UAAU,CAACK,WAAD,EAAeH,gBAAf,CAAnD,CAF2B,CAG3B;;AACA,QAAMU,oBAAoB,GAAGC,IAAI,IAAG;AAChCF,IAAAA,kBAAkB,CAAC;AAACG,MAAAA,IAAI,EAAC,KAAN;AAAcD,MAAAA,IAAI,EAACA;AAAnB,KAAD,CAAlB;AACH,GAFD,CAJ2B,CAQ3B;;;AACA,QAAME,yBAAyB,GAAGC,EAAE,IAAI;AACpCL,IAAAA,kBAAkB,CAAC;AAACG,MAAAA,IAAI,EAAC,KAAN;AAAcE,MAAAA,EAAE,EAACA;AAAjB,KAAD,CAAlB;AACH,GAFD,CAT2B,CAa3B;;;AACA,QAAMC,WAAW,GAAG;AAChBd,IAAAA,KAAK,EAACO,SAAS,CAACP,KADA;AAEhBC,IAAAA,WAAW,EAAGM,SAAS,CAACN,WAFR;AAGhBc,IAAAA,OAAO,EAACN,oBAHQ;AAIhBO,IAAAA,UAAU,EAAGJ;AAJG,GAApB;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cAA2CR,KAAK,CAACW;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CArBD;;GAAMZ,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["//component for providing\r\n//we will use useReducer for managing state\r\nimport { useReducer } from \"react\";\r\n\r\n\r\n//Headerbutton.js needs access to this context for count badge\r\n//meals.js will need acess to the context to add item to the cart\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\nconst defaultCartState ={\r\n    items:[],\r\n    totalAmount:0,\r\n}\r\n\r\n\r\nconst cartReducer = (state ,action) =>{\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = (props) =>{\r\n\r\n    const [cartState , dispatchCartAction] = useReducer(cartReducer , defaultCartState);\r\n    //fucntion to add items\r\n    const addItemToCartHandler = item =>{\r\n        dispatchCartAction({type:'ADD' , item:item})\r\n    }\r\n\r\n    //function to remove item from cart\r\n    const removeItemFromCartHandler = id => {\r\n        dispatchCartAction({type:'REM' , id:id})\r\n    }\r\n\r\n    //global context data\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount : cartState.totalAmount,\r\n        addItem:addItemToCartHandler,\r\n        removeitem : removeItemFromCartHandler\r\n    };\r\n    return <CartContext.Provider value={cartContext}>{props.children}</CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}